# Much of this code yoinked and modified from https://github.com/SR5-FoundryVTT/SR5-FoundryVTT
name: Prerelease System

on:
    release:
        types: [prereleased]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # Checkout
            - uses: actions/checkout@v4
            # install deps
            - run: npm ci

            # Substitute the Manifest and Download URLs in system.json
            - name: Update system.json url
              uses: jossef/action-set-json-field@v2.1
              with:
                  file: static/system.json
                  field: url
                  value: https://github.com/${{github.repository}}

            - name: Update system.json manifest link
              uses: jossef/action-set-json-field@v2.1
              with:
                  file: static/system.json
                  field: manifest
                  value: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/system.json

            - name: Update system.json version number
              uses: jossef/action-set-json-field@v2.1
              with:
                  file: static/system.json
                  field: version
                  value: ${{github.event.release.tag_name}}

            - name: Update system.json download link
              uses: jossef/action-set-json-field@v2.1
              with:
                  file: static/system.json
                  field: download
                  value: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/sfrpg-${{github.event.release.tag_name}}.zip

            # copy localizations
            - run: npm run copyLocalization
            # build src into dist
            - run: npm run build
            # create package
            - run: npm run package

            # delete old release files, if they're present
            - name: Delete old release assets
              uses: mknejp/delete-release-assets@v1
              with:
                  token: ${{ github.token }}
                  tag: ${{github.event.release.tag_name}}
                  fail-if-no-assets: false
                  assets: |
                      *.zip
                      *.json

            # Update the release with the correct files we just generated
            - name: Update Release with Files
              id: create_version_release
              uses: ncipollo/release-action@v1
              with:
                  makeLatest: false
                  allowUpdates: true # Set this to false if you want to prevent updating existing releases
                  name: ${{ github.event.release.name }}
                  draft: false
                  prerelease: true
                  token: ${{ secrets.GITHUB_TOKEN }}
                  artifacts: "./package/system.json, ./package/sfrpg-${{github.event.release.tag_name}}.zip"
                  tag: ${{ github.event.release.tag_name }}
                  body: ${{ github.event.release.body }}
